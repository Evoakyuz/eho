managed implementation in class zcl_bp_eho_i_acct unique;
strict ( 2 );

//with draft;
define behavior for ZEHO_I_ACCT alias ACCT
persistent table zeho_a_actt

//etag
//draft table zeho_d_actt
//etag master Bankcode
lock master
authorization master ( instance )
late numbering
//etag master <field_name>
{
  create  { default function  ; }
  update;
  delete;

  field ( readonly : update ) Bankcode, Bukrs, ActivityType, Priority;
   field ( mandatory : create )  Bankcode, Bukrs, ActivityType, Priority;

    validation validate_record on save { create;  field Bankcode, Bukrs , ActivityType , Priority; }



//    determination handle_box on modify{ field CancelProcess , VendorControl , CustomerControl , VirementControl ; }


   determination handle_mybox on modify {  field CustomerControl , VendorControl , CancelProcess , VirementControl;  }




    side effects {
//    determine action handle_checkbox executed on
//    field CancelProcess affects field VendorControl ,
//                                field CustomerControl ,
//                                field VirementControl  ;
//    field VendorControl affects  field CancelProcess ,
//                                field CustomerControl ,
//                                field VirementControl  ;
    field CustomerControl affects $self;
//    field VirementControl affects  field VendorControl ,
//                                   field CustomerControl ,
//                                   field CancelProcess  ;
  }

//////      determination CalculateDate on modify {  field CustomerControl; }
//      validation handle_box on save {create; update;  field CancelProcess , VendorControl ,CustomerControl ,VirementControl; }
//    determine action handle_checkbox{
//     validation handle_box;
//    }


  mapping for zeho_a_actt
  {
  Bankcode =  bankcode;
  Bukrs    =  bukrs;
  ActivityType = activity_type;
  Priority     = priority;
  Dc           = dc;
  Blart        = blart;
  VendorControl = vendor_control;
  CustomerControl = customer_control;
  Virementcontrol  = virement_control;
  Secondglacc      = secondgl_acc;
  Kostl            = kostl;
  Prctr            = prctr;
  Gsber            = gsber;
  Cancelprocess    = cancel_process;

  }
}